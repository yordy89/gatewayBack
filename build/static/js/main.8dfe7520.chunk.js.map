{"version":3,"sources":["Component/NavBar/NavBar.js","Store/reducer.js","Store/actions.js","Component/NavBar/index.js","Component/ContactList/ContactItem/ContactItem.js","Hooks/useSetContact.js","Component/ContactList/ContactItem/index.js","Component/ContactList/ContactList.js","Component/ContactList/index.js","Component/Contact/Contact.js","Component/Contact/index.js","Views/HomePage/HomePage.js","Store/store.js","Component/App/App.js","index.js"],"names":["NavBar","chips","onDelete","onChange","onKeyPress","onClick","value","theme","useTheme","match","useMediaQuery","breakpoints","down","StyledAppBar","position","StyledToolbar","StyledIcon","StyledInput","variant","size","placeholder","disabled","length","startAdornment","map","chip","InputAdornment","key","id","Chip","label","text","autoFocus","StyledButton","styled","AppBar","Box","props","Search","InputBase","Button","initialState","contacts","addContact","contact","dispatch","type","payload","editContact","Container","useState","setChips","setValue","useDispatch","findContacts","fetch","process","method","headers","body","JSON","stringify","then","res","json","console","log","catch","e","useEffect","filter","target","Math","random","withTheme","name","address","phoneNumber","email","handleDelete","edit","setEdit","handleEdit","handleChange","errors","Wrapper","Operations","Avatar","People","StyledBox","Title","TextField","error","required","Content","Action","Grid","span","useSetContact","setErrors","setContact","validations","isError","handleAdd","removeContact","div","ContactList","contactList","c","_id","useSelector","state","StyledCard","elevation","StyledCardContent","WrapperAdd","focused","inputProps","maxLength","Card","CardContent","HomePage","reducers","combineReducers","actions","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","compose","applyMiddleware","thunk","App","StylesProvider","injectFirst","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dfe7520.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { AppBar, Chip, InputAdornment, Box, Button, InputBase, useMediaQuery, useTheme } from '@material-ui/core'\r\nimport { Search } from '@material-ui/icons'\r\n\r\nconst NavBar = ({ chips, onDelete, onChange, onKeyPress, onClick, value }) => {\r\n    const theme = useTheme()\r\n    const match = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return (\r\n        <StyledAppBar position='relative'>\r\n            <StyledToolbar theme={theme}>\r\n                <StyledIcon />\r\n                <StyledInput\r\n                    theme={theme}\r\n                    variant='standard'\r\n                    size='small'\r\n                    placeholder='New Contact'\r\n                    value={value}\r\n                    disabled={match ? chips.length == 4 : chips.length == 6}\r\n                    startAdornment={\r\n                        chips.map(chip =>\r\n                            <InputAdornment key={chip.id} position=\"start\">\r\n                                <Chip size='small' onDelete={() => onDelete(chip.id)} label={chip.text} />\r\n                            </InputAdornment>\r\n                        )\r\n                    }\r\n                    onChange={onChange}\r\n                    onKeyPress={onKeyPress}\r\n                    autoFocus\r\n                />\r\n                <StyledButton onClick={onClick} size='small' variant='contained'>Search</StyledButton>\r\n            </StyledToolbar>\r\n        </StyledAppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n    background-color:black;\r\n`\r\n\r\nconst StyledToolbar = styled(Box)`\r\n    display: flex;\r\n    gap:1rem;\r\n    background-color: white;\r\n    padding: .3rem;\r\n    width: 90%;\r\n    height: 30%;\r\n    ${props => props.theme.breakpoints.down('sm')}{\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`\r\n\r\nconst StyledIcon = styled(Search)`\r\n    width:10%;\r\n    height:90%;\r\n    color:gray;\r\n`\r\nconst StyledInput = styled(InputBase)`\r\n    flex:3;\r\n    height:100%;\r\n    overflow: hidden;\r\n    ${props => props.theme.breakpoints.down('sm')}{\r\n        width: 100%;\r\n        overflow-x: scroll;\r\n    }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n    background-color: gray;\r\n    color: white;\r\n`\r\n","import { SET_CONTACT, ADD_CONTACT, REMOVE_CONTACT, EDIT_CONTACT } from './actions'\r\n\r\nconst initialState = {\r\n    contacts: []\r\n}\r\n\r\nexport default function ContactReducer(state = initialState, actions) {\r\n    switch (actions.type) {\r\n        case SET_CONTACT:\r\n            return { ...state, contacts: actions.payload }\r\n        case ADD_CONTACT:\r\n            return { ...state, contacts: [...state.contacts, actions.payload] }\r\n        case REMOVE_CONTACT:\r\n            return { ...state, contacts: state.contacts.filter(c => c._id !== actions.payload._id) }\r\n        case EDIT_CONTACT:\r\n            return {\r\n                ...state, contacts: state.contacts.map(contact => {\r\n                    if (contact._id === actions.payload._id) {\r\n                        contact = { ...contact, ...actions.payload }\r\n                    }\r\n                    return contact\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setContacts = (contacts) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_CONTACT,\r\n        payload: contacts\r\n    })\r\n}\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n    dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: contact\r\n    })\r\n}\r\n\r\nexport const removeContact = (contact) => (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_CONTACT,\r\n        payload: contact\r\n    })\r\n}\r\n\r\nexport const editContact = (contact) => (dispatch) => {\r\n    dispatch({\r\n        type: EDIT_CONTACT,\r\n        payload: contact\r\n    })\r\n}","export const SET_CONTACT = 'SET_CONTACT'\r\nexport const ADD_CONTACT = 'ADD_CONTACT'\r\nexport const REMOVE_CONTACT = 'REMOVE_CONTACT'\r\nexport const EDIT_CONTACT = 'EDIT_CONTACT'","import React, { useState, useEffect } from 'react'\r\nimport NavBar from './NavBar'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setContacts } from 'Store/reducer'\r\n\r\nconst Container = () => {\r\n    const [chips, setChips] = useState([])\r\n    const [value, setValue] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const onKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setChips([...chips, { id: Math.random() * 10000, text: e.target.value }])\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        setChips(chips.filter(chip => chip.id !== id))\r\n    }\r\n\r\n    const onClick = () => {\r\n        findContacts()\r\n    }\r\n\r\n    const findContacts = () => {\r\n        fetch(`${process.env.REACT_APP_API_URL}/contact/search`, {\r\n            method: 'Post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(chips)\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                dispatch(setContacts(res))\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    useEffect(() => {\r\n        findContacts()\r\n    }, [chips])\r\n\r\n    return (\r\n        <NavBar\r\n            onDelete={onDelete}\r\n            onChange={onChange}\r\n            onKeyPress={onKeyPress}\r\n            onClick={onClick}\r\n            chips={chips}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Grid, Box, Avatar, TextField, withTheme } from '@material-ui/core'\r\nimport { People } from '@material-ui/icons'\r\n\r\nconst ContactItem = ({ theme, id, name, address, phoneNumber, email, handleDelete, edit, setEdit, handleEdit, contact, handleChange, errors }) => {\r\n    return (\r\n        <Wrapper theme={theme}>\r\n            <Operations>\r\n                <Avatar>\r\n                    <People />\r\n                </Avatar>\r\n            </Operations>\r\n            <StyledBox>\r\n                <Title>Name</Title>\r\n                {\r\n                    !edit\r\n                        ? <Content>{name}</Content>\r\n                        : <TextField\r\n                            name='name'\r\n                            value={contact.name}\r\n                            variant='outlined'\r\n                            size='small'\r\n                            onChange={handleChange}\r\n                            error={errors.name}\r\n                            required\r\n                        />\r\n                }\r\n            </StyledBox>\r\n            <StyledBox>\r\n                <Title>Address</Title>\r\n\r\n                {\r\n                    !edit\r\n                        ? <Content>{address}</Content>\r\n                        : <TextField\r\n                            name='address'\r\n                            value={contact.address}\r\n                            variant='outlined'\r\n                            size='small'\r\n                            onChange={handleChange}\r\n                            error={errors.address}\r\n                            required\r\n                        />\r\n                }\r\n            </StyledBox>\r\n            <StyledBox>\r\n                <Title>Phone Number</Title>\r\n                {\r\n                    !edit\r\n                        ? <Content>{phoneNumber}</Content>\r\n                        : <TextField\r\n                            name='phoneNumber'\r\n                            value={contact.phoneNumber}\r\n                            variant='outlined'\r\n                            size='small'\r\n                            onChange={handleChange}\r\n                            error={errors.phoneNumber}\r\n                            required\r\n                        />\r\n                }\r\n            </StyledBox>\r\n            <StyledBox>\r\n                <Title>Email</Title>\r\n                {\r\n                    !edit\r\n                        ? <Content>{email}</Content>\r\n                        : <TextField\r\n                            name='email'\r\n                            value={contact.email}\r\n                            variant='outlined'\r\n                            size='small'\r\n                            onChange={handleChange}\r\n                            error={errors.email}\r\n                            required\r\n                        />\r\n                }\r\n            </StyledBox>\r\n            <Operations>\r\n                <Action onClick={() => handleEdit(id)}>{edit ? 'Save' : 'Edit'}</Action>\r\n                {\r\n                    !edit\r\n                        ? <Action onClick={() => handleDelete(id)}>Remove</Action>\r\n                        : <Action onClick={() => setEdit(false)}>Cancel</Action>\r\n                }\r\n            </Operations>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default withTheme(ContactItem)\r\n\r\nconst Wrapper = styled(Grid)`\r\n    height:100%;\r\n    width:100%;\r\n    padding:.2rem 0;\r\n    margin-bottom:1rem;\r\n    border: solid .1rem rgba(0,0,0,.1);\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    gap:.3rem;\r\n    ${props=> props.theme.breakpoints.down('md')}{\r\n        grid-template-columns: 1fr;\r\n        padding: .5rem;\r\n    };\r\n`\r\nconst StyledBox = styled(Box)`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst Title = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n`\r\nconst Content = styled.span`\r\n    font-size: 1rem;\r\n`\r\nconst Operations = styled(Box)`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n    gap:1rem;\r\n`\r\nconst Action = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n`\r\n","import { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addContact, editContact } from 'Store/reducer'\r\n\r\nconst useSetContact = (name = '', address = '', phoneNumber = 0, email = '') => {\r\n    const dispatch = useDispatch()\r\n    const [edit, setEdit] = useState(false)\r\n    const [errors, setErrors] = useState({})\r\n    const [contact, setContact] = useState({\r\n        name: name,\r\n        address: address,\r\n        phoneNumber: phoneNumber,\r\n        email: email\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setContact({\r\n            ...contact,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const validations = () => {\r\n        let errors = {}\r\n        errors.name = contact.name ? false : true\r\n        errors.address = contact.address ? false : true\r\n        errors.phoneNumber = contact.phoneNumber ? false : true\r\n        errors.email = contact.email ? false : true\r\n        setErrors({\r\n            ...errors\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        validations()\r\n    }, [contact])\r\n\r\n    const isError = () => {\r\n        return errors.name || errors.address || errors.phoneNumber || errors.email\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        !isError() &&\r\n            fetch(`${process.env.REACT_APP_API_URL}/contact`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify(contact)\r\n            }).then(res => res.json())\r\n                .then(res => {\r\n                    dispatch(addContact(res))\r\n                    setContact({\r\n                        name: '',\r\n                        address: '',\r\n                        phoneNumber: 0,\r\n                        email: ''\r\n                    })\r\n                }).catch(e => console.log(e))\r\n\r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n        if (!edit) {\r\n            setEdit(true)\r\n        } else {\r\n            !isError() &&\r\n                fetch(`${process.env.REACT_APP_API_URL}/contact/${id}`, {\r\n                    method: 'Put',\r\n                    headers: {\r\n                        \"Content-Type\": 'application/json'\r\n                    },\r\n                    body: JSON.stringify(contact)\r\n                }).then(res => res.json())\r\n                    .then(res => {\r\n                        dispatch(editContact(res))\r\n                        setEdit(false)\r\n                    })\r\n                    .catch(e => console.log(e))\r\n        }\r\n    }\r\n\r\n    return { contact, handleChange, handleAdd, edit, setEdit, handleEdit, errors }\r\n}\r\n\r\nexport default useSetContact\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport ContactItem from './ContactItem'\r\nimport { removeContact } from 'Store/reducer'\r\nimport useSetContact from 'Hooks/useSetContact'\r\n\r\nconst Container = ({ id, name, address, phoneNumber, email }) => {\r\n    const {\r\n        contact,\r\n        handleChange,\r\n        handleEdit,\r\n        edit,\r\n        setEdit,\r\n        errors\r\n    } = useSetContact(name, address, phoneNumber, email)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (id) => {\r\n        fetch(`${process.env.REACT_APP_API_URL}/contact/${id}`, {\r\n            method: 'Delete',\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(res => dispatch(removeContact(res)))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ContactItem\r\n                id={id}\r\n                name={name}\r\n                address={address}\r\n                phoneNumber={phoneNumber}\r\n                email={email}\r\n                handleDelete={handleDelete}\r\n                edit={edit}\r\n                setEdit={setEdit}\r\n                contact={contact}\r\n                handleChange={handleChange}\r\n                handleEdit={handleEdit}\r\n                errors={errors}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default Container\r\n\r\nconst Wrapper = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ContactItem from './ContactItem'\r\n\r\nconst ContactList = ({ contactList }) =>\r\n    <Wrapper>\r\n        {\r\n            contactList.map(c =>\r\n                <ContactItem\r\n                    key={c._id}\r\n                    id={c._id}\r\n                    name={c.name}\r\n                    address={c.address}\r\n                    phoneNumber={c.phoneNumber}\r\n                    email={c.email}\r\n                />\r\n            )\r\n        }\r\n    </Wrapper>\r\n\r\nexport default ContactList\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n`","import React from 'react'\r\nimport ContactList from './ContactList'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Container = () => {\r\n    const contactList = useSelector(state => state.contacts.contacts)\r\n    return (\r\n        <ContactList\r\n            contactList={contactList}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardContent, Grid, Box, TextField, withTheme } from '@material-ui/core'\r\nimport NavBar from 'Component/NavBar'\r\nimport ContactList from 'Component/ContactList'\r\n\r\nconst Contact = ({ contact, handleChange, handleAdd, errors, theme }) => {\r\n    return (\r\n        <Wrapper theme={theme}>\r\n            <NavBar />\r\n            <StyledCard elevation={5}>\r\n                <StyledCardContent>\r\n                    <WrapperAdd theme={theme}>\r\n                        <StyledBox>\r\n                            <Title>Name</Title>\r\n                            <Content\r\n                                name='name'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                focused\r\n                                value={contact.name}\r\n                                onChange={handleChange}\r\n                                required\r\n                                inputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 15\r\n\t\t\t\t\t\t\t\t}}\r\n                                error={errors.name}\r\n                            />\r\n                        </StyledBox>\r\n                        <StyledBox>\r\n                            <Title>Address</Title>\r\n                            <Content\r\n                                name='address'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                value={contact.address}\r\n                                onChange={handleChange}\r\n                                error={errors.address}\r\n                                required\r\n                            />\r\n                        </StyledBox>\r\n                        <StyledBox>\r\n                            <Title>Phone Number</Title>\r\n                            <Content\r\n                                name='phoneNumber'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                value={contact.phoneNumber}\r\n                                onChange={handleChange}\r\n                                error={errors.phoneNumber}\r\n                                required\r\n                            />\r\n                        </StyledBox>\r\n                        <StyledBox>\r\n                            <Title>Email</Title>\r\n                            <Content\r\n                                name='email'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                value={contact.email}\r\n                                onChange={handleChange}\r\n                                error={errors.email}\r\n                                required\r\n                            />\r\n                        </StyledBox>\r\n                        <Operations>\r\n                            <Action onClick={handleAdd}>Add</Action>\r\n                        </Operations>\r\n                    </WrapperAdd>\r\n                    <ContactList />\r\n                </StyledCardContent>\r\n            </StyledCard>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default withTheme(Contact)\r\n\r\nconst Wrapper = styled.div`\r\n    width:60%;\r\n    height:90%;\r\n    background-color: rgba(0, 0, 0, .1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap:2rem;\r\n    padding-bottom: 1rem;\r\n    ${props=> props.theme.breakpoints.down('md')}{\r\n        width:100%;\r\n    };\r\n`\r\nconst StyledCard = styled(Card)`\r\n    width:95%;\r\n    height:90%;\r\n`\r\n\r\nconst StyledCardContent = styled(CardContent)`\r\n    height:90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst WrapperAdd = styled(Grid)`\r\n    width:95%;\r\n    padding:.2rem;\r\n    margin-bottom:.2rem;\r\n    border: solid .1rem rgba(0,0,0,.1);\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap:.3rem;\r\n    ${props=> props.theme.breakpoints.down('md')}{\r\n        grid-template-columns: 1fr;\r\n    };\r\n`\r\nconst StyledBox = styled(Box)`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst Title = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n`\r\nconst Content = styled(TextField)`\r\n    font-size: 1rem;\r\n`\r\nconst Operations = styled(Box)`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`\r\nconst Action = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n`\r\n","import React from 'react'\r\nimport Contact from './Contact'\r\nimport useSetContact from 'Hooks/useSetContact'\r\n\r\nconst Container = () => {\r\n    const { contact, handleChange, handleAdd, errors } = useSetContact()\r\n    \r\n    return (\r\n        <Contact\r\n            handleChange={handleChange}\r\n            handleAdd={handleAdd}\r\n            contact={contact}\r\n            errors={errors}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Contact from 'Component/Contact'\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <Wrapper>\r\n            <Contact/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n    height: 100vh;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n","import { combineReducers, createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport ContactReducer from './reducer'\r\n\r\nconst reducers = combineReducers({\r\n    contacts: ContactReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nexport default function configureStore(){\r\n    return createStore(\r\n        reducers,\r\n        compose(\r\n            applyMiddleware(thunk),\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : ''\r\n            )\r\n    )\r\n}","import React from 'react'\r\nimport HomePage from 'Views/HomePage'\r\nimport configureStore from 'Store/store'\r\nimport { Provider } from 'react-redux'\r\nimport { StylesProvider } from '@material-ui/core'\r\n\r\nconst store = configureStore()\r\n\r\nconst App = () =>\r\n    <Provider store={store}>\r\n        <StylesProvider injectFirst>\r\n            <HomePage />\r\n        </StylesProvider>\r\n    </Provider>\r\n\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from 'Component/App'\r\n\r\nReactDom.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}