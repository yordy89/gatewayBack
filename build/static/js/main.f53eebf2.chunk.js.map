{"version":3,"sources":["Component/GatewayList/GatewayItem/GatewayItem.js","Store/reducer.js","Store/actions.js","Hooks/useSetGateway.js","Component/GatewayList/GatewayItem/index.js","Component/GatewayList/GatewaytList.js","Component/GatewayList/index.js","Component/Gateway/Gateway.js","Component/Gateway/index.js","Views/HomePage/HomePage.js","Store/store.js","Component/DeviceList/DeviceItem/index.js","Component/DeviceList/index.js","Views/Gateway/index.js","Component/App/App.js","index.js"],"names":["withTheme","theme","id","name","ipv4Address","handleDelete","edit","setEdit","handleEdit","gateway","handleChange","errors","Wrapper","Operations","Avatar","Devices","StyledBox","Title","TextField","value","variant","size","onChange","error","required","Content","ButtonsContainer","Action","onClick","LinkStyled","to","styled","Grid","props","breakpoints","down","Box","span","Link","initialState","gateways","addGateway","dispatch","type","payload","editGateway","useSetGateway","useDispatch","useState","setErrors","setGateway","e","target","validations","useEffect","isError","handleAdd","fetch","process","method","headers","body","JSON","stringify","then","res","json","catch","console","log","Container","removeGateway","div","GatewayList","gatewayList","Typography","align","color","map","g","key","_id","useSelector","state","StyledCard","elevation","StyledCardContent","WrapperAdd","focused","inputProps","maxLength","Card","CardContent","HomePage","a","reducers","combineReducers","actions","filter","c","window","__REDUX_DEVTOOLS_EXTENSION__","device","ButtonContainer","Delete","vendor","status","deviceList","gatewayId","devicesList","setDevicesList","addDevice","setAddDevice","setDevice","d","length","Gateway","params","match","history","useHistory","ContainerDates","BackContainer","push","ArrowBack","H5","TextContainer","H1","H2","h1","h5","store","createStore","compose","applyMiddleware","thunk","App","StylesProvider","injectFirst","exact","path","component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.f53eebf2.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Grid, Box, Avatar, TextField, withTheme } from '@material-ui/core'\r\nimport { Devices } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst GatewayItem = ({ theme, id, name, ipv4Address, handleDelete, edit, setEdit, handleEdit, gateway, handleChange, errors }) => {\r\n    return (\r\n        <Wrapper theme={theme}>\r\n                <Operations>\r\n                    <Avatar>\r\n                        <Devices />\r\n                    </Avatar>\r\n                </Operations>\r\n                <StyledBox>\r\n                    <Title>Name</Title>\r\n                    {\r\n                        !edit\r\n                            ? <Content>{name}</Content>\r\n                            : <TextField\r\n                                name='name'\r\n                                value={gateway.name}\r\n                                variant='outlined'\r\n                                size='small'\r\n                                onChange={handleChange}\r\n                                error={errors.name}\r\n                                required\r\n                            />\r\n                    }\r\n                </StyledBox>\r\n                <StyledBox>\r\n                    <Title>Ipv4 Address</Title>\r\n\r\n                    {\r\n                        !edit\r\n                            ? <Content>{ipv4Address}</Content>\r\n                            : <TextField\r\n                                name='ipv4Address'\r\n                                value={gateway.ipv4Address}\r\n                                variant='outlined'\r\n                                size='small'\r\n                                onChange={handleChange}\r\n                                error={errors.ipv4Address}\r\n                                required\r\n                            />\r\n                    }\r\n                </StyledBox>\r\n                <Operations>\r\n                    <ButtonsContainer>\r\n                    <Action onClick={() => handleEdit(id)}>{edit ? 'Save' : 'Edit'}</Action>\r\n                    {\r\n                        !edit\r\n                            ? <Action onClick={() => handleDelete(id)}>Remove</Action>\r\n                            : <Action onClick={() => setEdit(false)}>Cancel</Action>\r\n                    }\r\n                    </ButtonsContainer>\r\n                    {\r\n                        !edit &&  <LinkStyled to={`/gateway/${id}`}>See More Details ...</LinkStyled>\r\n                    }\r\n                </Operations>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default withTheme(GatewayItem)\r\n\r\nconst Wrapper = styled(Grid)`\r\n    height:100%;\r\n    width:100%;\r\n    padding:.2rem 0;\r\n    margin-bottom:1rem;\r\n    border: solid .1rem rgba(0,0,0,.1);\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    gap:.3rem;\r\n    ${props => props.theme.breakpoints.down('md')}{\r\n        grid-template-columns: 1fr;\r\n        padding: .5rem;\r\n    };\r\n`\r\nconst StyledBox = styled(Box)`\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin-bottom:5px;\r\n`\r\nconst Title = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n`\r\nconst Content = styled.span`\r\n    font-size: 1rem;\r\n`\r\nconst Operations = styled(Box)`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n    gap:1rem;\r\n`\r\nconst Action = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n    margin-right: 10px;\r\n`\r\n\r\nconst ButtonsContainer = styled(Box)`\r\n    flex: 1;\r\n    text-align: center\r\n`\r\n\r\nconst LinkStyled = styled(Link)`\r\n    text-decoration: none;\r\n    color: black;\r\n`\r\n","import { SET_GATEWAY, ADD_GATEWAY, REMOVE_GATEWAY, EDIT_GATEWAY, GET_GATEWAY } from './actions'\r\n\r\nconst initialState = {\r\n    gateways: []\r\n}\r\n\r\nexport default function GatewayReducer(state = initialState, actions) {\r\n    switch (actions.type) {\r\n        case GET_GATEWAY:\r\n            return { ...state, gateways: actions.payload }\r\n        case SET_GATEWAY:\r\n            return { ...state, gateways: actions.payload }\r\n        case ADD_GATEWAY:\r\n            return { ...state, gateways: [...state.gateways, actions.payload] }\r\n        case REMOVE_GATEWAY:\r\n            return { ...state, gateways: state.gateways.filter(c => c._id !== actions.payload._id) }\r\n        case EDIT_GATEWAY:\r\n            return {\r\n                ...state, gateways: state.gateways.map(gateway => {\r\n                    if (gateway._id === actions.payload._id) {\r\n                        gateway = { ...gateway, ...actions.payload }\r\n                    }\r\n                    return gateway\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setGateways = (Gateways) => (dispatch) => {\r\n    dispatch({\r\n        type: SET_GATEWAY,\r\n        payload: Gateways\r\n    })\r\n}\r\n\r\nexport const addGateway = (gateway) => (dispatch) => {\r\n    dispatch({\r\n        type: ADD_GATEWAY,\r\n        payload: gateway\r\n    })\r\n}\r\n\r\nexport const removeGateway = (gateway) => (dispatch) => {\r\n    dispatch({\r\n        type: REMOVE_GATEWAY,\r\n        payload: gateway\r\n    })\r\n}\r\n\r\nexport const editGateway = (gateway) => (dispatch) => {\r\n    dispatch({\r\n        type: EDIT_GATEWAY,\r\n        payload: gateway\r\n    })\r\n}\r\n\r\nexport const getGateway = () => async (dispatch) => {\r\n    const gateways = await fetch(`${process.env.REACT_APP_API_URL}/gateway`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": 'application/json'\r\n        }\r\n    });\r\n    dispatch({\r\n        type: GET_GATEWAY,\r\n        payload: await gateways.json()\r\n    })\r\n}","export const SET_GATEWAY = 'SET_GATEWAY'\r\nexport const ADD_GATEWAY = 'ADD_GATEWAY'\r\nexport const REMOVE_GATEWAY = 'REMOVE_GATEWAY'\r\nexport const EDIT_GATEWAY = 'EDIT_GATEWAY'\r\nexport const GET_GATEWAY = 'GET_GATEWAY'","import { useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addGateway, editGateway } from 'Store/reducer'\r\n\r\nconst useSetGateway = (name = '', ipv4Address = '') => {\r\n    const dispatch = useDispatch()\r\n    const [edit, setEdit] = useState(false)\r\n    const [errors, setErrors] = useState({})\r\n    const [gateway, setGateway] = useState({\r\n        name: name,\r\n        ipv4Address: ipv4Address,\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setGateway({\r\n            ...gateway,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const validations = () => {\r\n        let errors = {}\r\n        errors.name = gateway.name ? false : true\r\n        errors.ipv4Address = gateway.ipv4Address ? false : true\r\n        setErrors({\r\n            ...errors\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        validations()\r\n    }, [gateway])\r\n\r\n    const isError = () => {\r\n        return errors.name || errors.ipv4Address\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        !isError() &&\r\n            fetch(`${process.env.REACT_APP_API_URL}/gateway`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": 'application/json'\r\n                },\r\n                body: JSON.stringify(gateway)\r\n            }).then(res => res.json())\r\n                .then(res => {\r\n                    dispatch(addGateway(res))\r\n                    setGateway({\r\n                        name: '',\r\n                        ipv4Address: '',\r\n                    })\r\n                }).catch(e => console.log(e))\r\n\r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n        if (!edit) {\r\n            setEdit(true)\r\n        } else {\r\n            !isError() &&\r\n                fetch(`${process.env.REACT_APP_API_URL}/gateway/${id}`, {\r\n                    method: 'Put',\r\n                    headers: {\r\n                        \"Content-Type\": 'application/json'\r\n                    },\r\n                    body: JSON.stringify(gateway)\r\n                }).then(res => res.json())\r\n                    .then(res => {\r\n                        dispatch(editGateway(res))\r\n                        setEdit(false)\r\n                    })\r\n                    .catch(e => console.log(e))\r\n        }\r\n    }\r\n\r\n    return { gateway, handleChange, handleAdd, edit, setEdit, handleEdit, errors }\r\n}\r\n\r\nexport default useSetGateway\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport GatewayItem from './GatewayItem'\r\nimport { removeGateway } from 'Store/reducer'\r\nimport useSetGateway from 'Hooks/useSetGateway'\r\n\r\nconst Container = ({ id, name, ipv4Address }) => {\r\n    const {\r\n        gateway,\r\n        handleChange,\r\n        handleEdit,\r\n        edit,\r\n        setEdit,\r\n        errors\r\n    } = useSetGateway(name, ipv4Address)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = (id) => {\r\n        fetch(`${process.env.REACT_APP_API_URL}/gateway/${id}`, {\r\n            method: 'Delete',\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n            .then(res => dispatch(removeGateway(res)))\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <GatewayItem\r\n                id={id}\r\n                name={name}\r\n                ipv4Address={ipv4Address}\r\n                handleDelete={handleDelete}\r\n                edit={edit}\r\n                setEdit={setEdit}\r\n                gateway={gateway}\r\n                handleChange={handleChange}\r\n                handleEdit={handleEdit}\r\n                errors={errors}\r\n            />\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default Container\r\n\r\nconst Wrapper = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport GatewayItem from './GatewayItem'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst GatewayList = ({ gatewayList }) =>\r\n    <Wrapper>\r\n        <Typography variant='h5' align='center' color='textSecondary'>Gateway List</Typography>\r\n        {\r\n            gatewayList.map(g => \r\n                <GatewayItem\r\n                    key={g._id}\r\n                    id={g._id}\r\n                    name={g.name}\r\n                    ipv4Address={g.ipv4Address}\r\n                />\r\n            )\r\n        }\r\n    </Wrapper>\r\n\r\nexport default GatewayList\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n`","import React from 'react'\r\nimport GatewayList from './GatewaytList'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Container = () => {\r\n    const gatewayList = useSelector(state => state.gateways.gateways)\r\n    return (\r\n        <GatewayList\r\n            gatewayList={gatewayList}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardContent, Grid, Box, TextField, withTheme, Typography } from '@material-ui/core'\r\nimport GatewayList from 'Component/GatewayList'\r\n\r\nconst Gateway = ({ gateway, handleChange, handleAdd, errors, theme }) => {\r\n    return (\r\n        <Wrapper theme={theme}>\r\n            <StyledCard elevation={5}>\r\n                <StyledCardContent>\r\n                    <WrapperAdd theme={theme}>\r\n                    <Typography variant='h5' align='center' color='textSecondary'>Add Gateway</Typography>\r\n                        <StyledBox>\r\n                            <Title>Name</Title>\r\n                            <Content\r\n                                name='name'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                focused\r\n                                value={gateway.name}\r\n                                onChange={handleChange}\r\n                                required\r\n                                inputProps={{\r\n\t\t\t\t\t\t\t\t\tmaxLength: 15\r\n\t\t\t\t\t\t\t\t}}\r\n                                error={errors.name}\r\n                            />\r\n                        </StyledBox>\r\n                        <StyledBox>\r\n                            <Title>Ipv4Address</Title>\r\n                            <Content\r\n                                name='ipv4Address'\r\n                                variant='outlined'\r\n                                size='small'\r\n                                value={gateway.ipv4Address}\r\n                                onChange={handleChange}\r\n                                error={errors.ipv4Address}\r\n                                required\r\n                            />\r\n                        </StyledBox>\r\n                        <Operations>\r\n                            <Action onClick={handleAdd}>Add</Action>\r\n                        </Operations>\r\n                    </WrapperAdd>\r\n                    <GatewayList />\r\n                </StyledCardContent>\r\n            </StyledCard>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default withTheme(Gateway)\r\n\r\nconst Wrapper = styled.div`\r\n    width:60%;\r\n    height:90%;\r\n    background-color: rgba(0, 0, 0, .1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap:2rem;\r\n    padding-bottom: 1rem;\r\n    ${props=> props.theme.breakpoints.down('md')}{\r\n        width:100%;\r\n    };\r\n`\r\nconst StyledCard = styled(Card)`\r\n    width:95%;\r\n    height:90%;\r\n`\r\n\r\nconst StyledCardContent = styled(CardContent)`\r\n    height:90%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    overflow-y: scroll;\r\n`\r\n\r\nconst WrapperAdd = styled(Grid)`\r\n    width:95%;\r\n    padding:.2rem;\r\n    margin-bottom:.2rem;\r\n    border: solid .1rem rgba(0,0,0,.1);\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap:.3rem;\r\n    ${props=> props.theme.breakpoints.down('md')}{\r\n        grid-template-columns: 1fr;\r\n    };\r\n`\r\nconst StyledBox = styled(Box)`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst Title = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n`\r\nconst Content = styled(TextField)`\r\n    font-size: 1rem;\r\n`\r\nconst Operations = styled(Box)`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`\r\nconst Action = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n`\r\n","import React from 'react'\r\nimport Gateway from './Gateway'\r\nimport useSetGateway from 'Hooks/useSetGateway'\r\n\r\nconst Container = () => {\r\n    const { gateway, handleChange, handleAdd, errors } = useSetGateway()\r\n    return (\r\n        <Gateway\r\n            handleChange={handleChange}\r\n            handleAdd={handleAdd}\r\n            gateway={gateway}\r\n            errors={errors}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React, {useEffect} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport Gateway from 'Component/Gateway'\r\nimport { getGateway } from 'Store/reducer'\r\n\r\nconst HomePage = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getGateway())\r\n    }, [])\r\n    return (\r\n        <Wrapper>\r\n            <Gateway />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n\r\nconst Wrapper = styled.div`\r\n    width:100%;\r\n    height: 100vh;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n","import { combineReducers, createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport GatewayReducer from './reducer'\r\n\r\nconst reducers = combineReducers({\r\n    gateways: GatewayReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nexport default function configureStore(){\r\n    return createStore(\r\n        reducers,\r\n        compose(\r\n            applyMiddleware(thunk),\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : ''\r\n            )\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Grid, withTheme } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons'\r\n\r\nconst DeviceItem = ({ device, theme, handleDelete }) => {\r\n  return (\r\n    <Wrapper theme={theme}>\r\n      <ButtonContainer onClick={() => handleDelete(device._id)}><Delete/></ButtonContainer>     \r\n      <StyledBox>\r\n        <Title>Vendor</Title>\r\n        <Content>{device.vendor}</Content>\r\n      </StyledBox>\r\n      <StyledBox>\r\n        <Title>Status</Title>\r\n        <Content>{device.status ? 'Online' : 'Offline'}</Content>\r\n      </StyledBox>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default withTheme(DeviceItem)\r\n\r\nconst Wrapper = styled(Grid)`\r\n    background-color: rgba(0,0,0,.2);\r\n    padding: 1rem;\r\n    margin-bottom:1rem;\r\n    border: solid .1rem rgba(0,0,0,.1);\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    gap:.3rem;\r\n    margin-right: 1rem;\r\n    ${props => props.theme.breakpoints.down('md')}{\r\n        grid-template-columns: 1fr;\r\n        padding: .5rem;\r\n    };\r\n`\r\nconst StyledBox = styled(Box)`\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin-bottom:5px;\r\n`\r\nconst Title = styled.span`\r\n    font-size: .8rem;\r\n    color: black;\r\n`\r\nconst Content = styled.span`\r\n    font-size: 1rem;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  cursor: pointer;\r\n  color: red;\r\n`\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Typography, withTheme, Grid, TextField } from '@material-ui/core'\r\nimport DeviceItem from './DeviceItem'\r\n\r\nconst DeviceList = ({ deviceList = [], gatewayId, theme }) => {\r\n  const [devicesList, setDevicesList] = useState([])\r\n  const [addDevice, setAddDevice] = useState(false)\r\n  const [device, setDevice] = useState({\r\n    vendor: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    setDevicesList(deviceList)\r\n  }, [deviceList])\r\n  const handleAddDevice = () => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/device/${gatewayId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": 'application/json'\r\n      },\r\n      body: JSON.stringify(device)\r\n    }).then(res => res.json())\r\n      .then(res => {\r\n        setDevicesList([...devicesList, res])\r\n        setAddDevice(false)\r\n        setDevice({\r\n          vendor: ''\r\n        })\r\n      })\r\n      .catch(e => console.log(e))\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/device/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        \"Content-Type\": 'application/json'\r\n      },\r\n    }).then(res => res.json())\r\n      .then(res => {\r\n        setDevicesList(devicesList.filter(d => d._id !== id))\r\n      })\r\n      .catch(e => console.log(e))\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setDevice({\r\n      ...device,\r\n      [e.target.name]: e.target.value\r\n  })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant='h5' color='white' align='center'>Device List</Typography>\r\n      <Wrapper>\r\n        {\r\n          devicesList.length > 0 ? devicesList.map(device => <DeviceItem key={device._id} device={device} handleDelete={handleDelete} />) : <Typography>No hay device para mostrar</Typography>\r\n        }\r\n\r\n      </Wrapper>\r\n      { devicesList.length < 10 && <Action onClick={() => setAddDevice(true)}>Add Device</Action>}\r\n      {\r\n        addDevice && (\r\n          <WrapperAdd theme={theme}>\r\n            <Typography variant='h5' align='center' color='white'>Add Device</Typography>\r\n            <StyledBox>\r\n              <Title>Vendor</Title>\r\n              <Content\r\n                name='vendor'\r\n                variant='outlined'\r\n                size='small'\r\n                focused\r\n                value={device.vendor}\r\n                onChange={handleChange}\r\n                required\r\n                inputProps={{\r\n                  maxLength: 15\r\n                }}\r\n              />\r\n            </StyledBox>\r\n            <Operations>\r\n              <Action onClick={handleAddDevice}>Add</Action>\r\n            </Operations>\r\n          </WrapperAdd>\r\n        )\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default withTheme(DeviceList)\r\n\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nconst Wrapper = styled(Box)`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n`\r\n\r\nconst Action = styled.span`\r\n    font-size: .8rem;\r\n    color: rgba(0,0,0,.3);\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n    margin-right: 10px;\r\n    color: white;\r\n    margin-left: auto;\r\n    margin-bottom: 0.5rem;\r\n`\r\n\r\nconst WrapperAdd = styled(Grid)`\r\n  background-color: rgba(0,0,0,.2);\r\n    width:95%;\r\n    padding:.2rem;\r\n    margin-bottom:.2rem;\r\n    border: solid .1rem rgba(0,0,0,.1);\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap:.3rem;\r\n    ${props => props.theme.breakpoints.down('md')}{\r\n        grid-template-columns: 1fr;\r\n    };\r\n`\r\nconst StyledBox = styled(Box)`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst Title = styled.span`\r\n    color: white;\r\n    font-size: .8rem;\r\n    margin-bottom: 0.1rem;\r\n`\r\nconst Content = styled(TextField)`\r\n    font-size: 1rem;\r\n`\r\nconst Operations = styled(Box)`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ArrowBack } from '@material-ui/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport DeviceList from '../../Component/DeviceList'\r\n\r\nconst Gateway = (props) => {\r\n  const { match: { params } } = props\r\n  const [gateway, setGateway] = useState({})\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/gateway/${params.id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-Type\": 'application/json'\r\n      },\r\n    }).then(res => res.json())\r\n      .then(setGateway)\r\n      .catch(e => console.log(e))\r\n  }, [params.id])\r\n  return (\r\n    <Container>\r\n      <ContainerDates>\r\n      <BackContainer onClick={() => history.push('/')}>\r\n        <ArrowBack/> <H5>Back</H5>\r\n        </BackContainer>\r\n        <TextContainer>\r\n          <H1>Name:</H1><H2>{gateway.name}</H2>\r\n        </TextContainer>\r\n        <TextContainer>\r\n          <H1>Ipv4 Address:</H1><H2>{gateway.ipv4Address}</H2>\r\n        </TextContainer>\r\n        {<DeviceList deviceList={gateway.deviceList} gatewayId={gateway._id}/>}\r\n      </ContainerDates>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Gateway\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nconst ContainerDates = styled.div`\r\n  width: 90%;\r\n  height: 90%;\r\n  background-color: rgba(0,0,0,0.5);\r\n  padding: 16px;\r\n  color: white;\r\n`\r\n\r\nconst TextContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst H1 = styled.h1`\r\n  color: white;\r\n  font-weight: bold;\r\n  margin-right: 10px;\r\n`\r\nconst H2 = styled.h1`\r\n  color: white;\r\n  font-weight: 400;\r\n  text-transform: capitalize;\r\n`\r\n\r\nconst H5 = styled.h5`\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  margin-left: 5px\r\n`\r\n\r\nconst BackContainer = styled.div`\r\n  display: flex;\r\n  color: black;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`\r\n","import React from 'react'\r\nimport HomePage from 'Views/HomePage'\r\nimport configureStore from 'Store/store'\r\nimport { Provider } from 'react-redux'\r\nimport { StylesProvider } from '@material-ui/core'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Gateway from '../../Views/Gateway'\r\n\r\nconst store = configureStore()\r\n\r\nconst App = () =>\r\n    <Provider store={store}>\r\n        <StylesProvider injectFirst>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/' component={HomePage} />\r\n                    <Route path='/gateway/:id' component={Gateway} />\r\n                </Switch>\r\n            </Router>\r\n        </StylesProvider>\r\n    </Provider>\r\n\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from 'Component/App'\r\n\r\nReactDom.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}